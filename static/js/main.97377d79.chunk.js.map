{"version":3,"sources":["Components/TaskForm.js","Components/Search.js","Components/Sort.js","Components/Control.js","Components/TaskItem.js","Components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onHandleSubmit","preventDefault","onSubmit","state","onClear","status","id","this","task","nextProps","className","style","backgroundColor","onClick","type","placeholder","position","right","top","Component","Search","useState","keyWord","searchKeyWord","setSearchKeyWord","e","onSearch","Sort","sortName","sortValue","a","sortSet","onSort","href","Control","sortBy","ortValue","TaskList","index","color","onUpDataStatus","onUpDate","onDelete","filterName","filterStatus","filter","setFilter","tasks","elems","map","TaskItem","onFilter","App","randomString","Math","floor","random","toString","substring","generateID","onToggleForm","isDisplayForm","taskEditing","onOpenForm","data","push","findIndex","localStorage","setItem","JSON","stringify","splice","result","forEach","parseInt","toLowerCase","getItem","parse","indexOf","elemTaskForm","sort","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97377d79.chunk.js","sourcesContent":["\nimport React, { Component } from 'react'\n\n// function TaskForm(props) {\nclass TaskForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            name: \"\",\n            status: false\n        };\n    }\n\n    // chạy khi component chưa đc kích hoạt\n    componentWillMount() {\n        if(this.props.task) {\n            this.setState(\n                {\n                    id: this.props.task.id,\n                    name: this.props.task.name,\n                    status: this.props.task.status\n                }\n            );\n        }\n    }\n\n    // khi component đã đc kích hoạt nhưng muốn cập nhật props luôn\n    componentWillReceiveProps(nextProps) {\n        if(nextProps && nextProps.task) {\n            this.setState(\n                {\n                    id: nextProps.task.id,\n                    name: nextProps.task.name,\n                    status: nextProps.task.status\n                }\n            );\n        }else if(nextProps && nextProps.task === null) {\n            this.setState(\n                {\n                    id: \"\",\n                    name: \"\",\n                    status: false        \n                }\n            );\n        }\n    }     \n\n    onCloseForm = () => {\n        this.props.onCloseForm();\n    }\n\n    onChange = (event) => {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n\n        if(name === \"status\") {\n            value = target.value === \"true\" ? true : false;\n        }\n\n        \n        this.setState(\n            {\n                [name]: value\n            }\n        );\n    }\n\n    onHandleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n\n        this.onClear();\n        this.onCloseForm();\n    }\n\n    onClear = () => {\n        // setWork(\n        //     {\n        //         name: \"\",\n        //         status: false\n        //     }\n        // );\n        this.setState(\n            {\n                name: \"\",\n                status: false\n            }\n        );\n    }\n\n    render() {\n        \n        let {id} = this.state;\n\n        return (\n            <div className=\"card\">\n                <div className=\"card-header pos-relative \" style={{backgroundColor: \"antiquewhite\"}}>\n                    {id === \"\" ? \"Them cong viec\" : \"Cap nhat cong viec\"}\n                    <i className=\"fas fa-times-circle icon-close\" onClick={this.onCloseForm}></i>\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={ this.onHandleSubmit } >\n                        <div className=\"form-group\">\n                            <label> Ten: </label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control bxShadow-none\" \n                                placeholder=\"\" \n                                name=\"name\"\n                                value={ this.state.name }\n                                onChange= {this.onChange} \n                            />\n                        </div>\n                            \n                        <div className=\"form-group mt-2\">\n                            <label> Trang thai: </label>\n                            <div style={{position:\"relative\"}}>\n                            <select \n                                className=\"form-control bxShadow-none\" \n                                name=\"status\"\n                                value={ this.state.status }\n                                onChange= {this.onChange} \n                            > \n                                <option value={true}> Kich hoat </option>\n                                <option value={false}> An </option>\n                            </select>\n                                <i className=\"fas fa-caret-down\"\n                                    style={{position: \"absolute\",\n                                            right: \"7px\",\n                                            top: \"32%\"}}\n                                ></i>\n                            </div>\n                        </div>\n    \n                        <button type=\"submit\" className=\"btn btn-warning mt-2 bxShadow-none\"> \n                        <i className=\"fas fa-plus mr-2\"></i>\n                            Luu lai \n                        </button>\n                        <button type=\"button\" className=\"btn btn-danger mt-2 ml-2 bxShadow-none\" onClick={ this.onClear } > \n                            <i className=\"fas fa-times mr-2\"></i>\n                            Huy bo \n                        </button>\n                    </form>\n    \n    \n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default TaskForm;\n","\nimport React, {useState} from 'react' \n\nfunction Search(props) {\n\n    let [searchKeyWord, setSearchKeyWord] = useState(\n        {\n            keyWord: \"\"\n        }\n    );\n    \n    let {keyWord} = searchKeyWord;\n\n    const onChange = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        setSearchKeyWord(\n            {\n                ...searchKeyWord,\n                [name]: value\n            }\n        );\n    }\n\n    const onSearch = () => {\n        props.onSearch(searchKeyWord.keyWord);\n    }\n\n\treturn (\n        <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6\">\n            <div className=\"search input-group\">\n                <input \n                    type=\"text\" \n                    name=\"keyWord\" \n                    className=\"bxShadow-none mt-2 form-control\" \n                    placeholder=\"Nhap tu khoa...\"\n                    value={keyWord} \n                    onChange={onChange}\n                />\n                <span className=\"input-group-btn mt-2\">\n                    <button type=\"button\" className=\"btn btn-primary bxShadow-none\" onClick={onSearch}>\n                        <i className=\"fas fa-search mr-2\"></i>\n                        Tim\n                    </button>\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n","\nimport React, {Component} from 'react'\n\n// function Sort(props) {\nclass Sort extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortSet: {\n                name: \"\",\n                value: 1\n            }\n        };\n    }\n\n    onClick = async(sortName, sortValue) => {\n        // let name = sortName;\n        // let value = sortValue;\n        await this.setState(\n            {\n                sortSet: {\n                    name: sortName,\n                    value: sortValue\n                }\n            }\n        );\n\n        // console.log(this.state);\n\n        this.props.onSort(sortName, sortValue);\n        \n    }   \n\n    \n    render() {\n\n        return (\n            <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6\">\n                <div className=\"dropdown mt-2\">\n                    <button \n                        className=\"btn btn-primary dropdown-toggle bxShadow-none\" \n                        type=\"button\" \n                        id=\"dropdownMenuButton1\" \n                        data-bs-toggle=\"dropdown\" \n                        aria-expanded=\"false\" \n                    >\n                                Sap xep\n                    </button>\n                    \n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                        <li className=\"pos-relative\" onClick={() => this.onClick(\"name\", 1) } ><a className=\"dropdown-item\" href=\"#\">\n                            <i className=\"fas fa-sort-alpha-down mr-2\"></i>\n                            A-Z\n                            <i className= {(this.state.sortSet.name === \"name\" && this.state.sortSet.value === 1) ? \"fas fa-check icon-check\" : \"\"} > </i>\n                        </a></li><hr />\n                        <li className=\"pos-relative\" onClick={() => this.onClick(\"name\", -1) } ><a className=\"dropdown-item\" href=\"#\">\n                            <i className=\"fas fa-sort-alpha-down-alt mr-2\"></i>\n                            Z-A\n                            <i className= {(this.state.sortSet.name === \"name\" && this.state.sortSet.value === -1) ? \"fas fa-check icon-check\" : \"\"} > </i>\n                        </a></li><hr />\n                        <li className=\"pos-relative\" onClick={() => this.onClick(\"status\", 1) } ><a className=\"dropdown-item\" href=\"#\">\n                            Kich hoat\n                            <i className= {(this.state.sortSet.name === \"status\" && this.state.sortSet.value === 1) ? \"fas fa-check icon-check\" : \"\"} > </i>\n                        </a></li><hr />\n                        <li className=\"pos-relative\" onClick={() => this.onClick(\"status\", -1) } ><a className=\"dropdown-item\" href=\"#\">\n                            An\n                            <i className= {(this.state.sortSet.name === \"status\" && this.state.sortSet.value === -1) ? \"fas fa-check icon-check\" : \"\"} > </i>\n                        </a></li>\n                    </ul>\n                </div>\n            </div>\n          );\n    }\n\n}\n\nexport default Sort;\n","\nimport React from 'react'\nimport Search from './Search'\nimport Sort from './Sort'\n\nfunction Control(props) {\n\treturn (\n        <div className=\"row mt-10\">\n            \n            <Search onSearch={props.onSearch} />\n                    \n            <Sort \n                onSort={props.onSort} \n                sortBy={props.sortBy}\n\t\t\t\tortValue={props.sortValue} />\n\n        </div>\n  \t);\n}\n\nexport default Control;\n","\nimport React from 'react'\n\nfunction TaskList(props) {\n\n    let {task, index} = props;\n\n    let onUpDataStatus = () => {\n        props.onUpDataStatus(task.id);\n    }\n\n    let onDelete = () => {\n        props.onDelete(task.id);\n    }\n\n    let onUpDate = () => {\n        props.onUpDate(task.id);\n    }\n\n\treturn (\n        <tr>\n            <td> {index + 1} </td>\n            <td> {task.name} </td>\n            <td className=\"text-center\">\n                <span \n                    className=\"cursor-pointer\" \n                    style={task.status === true ? {backgroundColor:\"red\", color:\"white\"} : {backgroundColor:\"green\", color:\"white\"}}\n                    onClick={onUpDataStatus}\n                >\n                    {task.status === true ? \"Kich hoat\" : \"An\"}\n                </span>\n            </td>\n            <td className=\"text-center\">\n            <button type=\"button\" className=\"btn btn-warning mt-2\" onClick={onUpDate} > \n                <i className=\"fas fa-pen mr-2\"></i>\n                Sua \n            </button>\n            <button type=\"button\" className=\"btn btn-danger mt-2 ml-2\" onClick={onDelete} > \n                <i className=\"fas fa-trash-alt mr-2\"></i>\n                Xoa\n            </button>\n            </td>\n        </tr>\n  \t);\n}\n\nexport default TaskList;\n","\nimport React, {useState} from 'react'\nimport TaskItem from './TaskItem'\n\nfunction TaskList(props) {\n    \n    let [filter, setFilter] = useState(\n        {\n            filterName: \"\",\n            filterStatus: -1   // -1: all, 1: kich hoat, 0: an\n        }\n    );\n\n    let {tasks} = props;\n    let {filterName, filterStatus} = filter;\n\n    let elems = tasks.map((task, index) => {\n        return <TaskItem \n                    key={task.id} \n                    index={index} \n                    task={task}\n                    onUpDataStatus = {props.onUpDataStatus} \n                    onDelete={props.onDelete}\n                    onUpDate={props.onUpDate}\n                />\n    });\n\n    const onChange = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        props.onFilter(\n            name === \"filterName\" ? value : filter.filterName,\n            name === \"filterStatus\" ? value : filter.filterStatus\n        );\n\n        setFilter(\n            {\n                ...filter,\n                [name]: value\n            }\n        );\n\n\n    }\n\n\treturn (\n        <table className=\"table table-striped table-inverse table-responsive table-bordered table-hover\">\n            <thead>\n                <tr>\n                    <th>STT</th>\n                    <th>Ten</th>\n                    <th>Trang thai</th>\n                    <th>Hanh dong</th>\n                </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td></td>\n                        <td>\n                        <input\ttype=\"text\"\n                                className=\"form-control bxShadow-none\" \n                                name=\"filterName\" \n                                placeholder=\"Tim theo ten\"\n                                value={filterName}\n                                onChange={onChange}\n                        />\n                        </td>\n                        <td>\n                            <div style={{position:\"relative\"}}>\n                                <select \n                                    className=\"form-control bxShadow-none\" \n                                    name=\"filterStatus\" \n                                    id=\"\"\n                                    value={filterStatus}\n                                    onChange={onChange}\n                                >\n                                    <option value={-1}>Tat ca</option>\n                                    <option value={0}>An</option>\n                                    <option value={1}>Kich hoat</option>\n                                </select>\n                                <i className=\"fas fa-caret-down\"\n                                    style={{position: \"absolute\",\n                                            right: \"7px\",\n                                            top: \"32%\"}}\n                                ></i>\n                            </div>\n                        </td>\n                        <td></td>\n                    </tr>\n                    \n                    {/* <TaskItem /> */}\n                    {elems}\n\n                </tbody>\n        </table>\n  \t);\n}\n\nexport default TaskList;\n","\nimport React, { Component } from 'react'\nimport './App.css';\nimport TaskForm from './Components/TaskForm';\nimport Control from './Components/Control'\nimport TaskList from './Components/TaskList'\n\n// function App() {\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: [], // id(unique), name, status\n\t\t\tisDisplayForm: false,\n\t\t\ttaskEditing: null,\n\t\t\tfilter: {\n\t\t\t\tname: \"\",\n\t\t\t\tstatus: -1\n\t\t\t},\n\t\t\tkeyWord: \"\",\n\t\t\tsortBy: \"\",\n\t\t\tsortValue: 1\n\t\t};\n\t}\n\n\t// đc gọi 1 lần khi refresh (f5) trang web\n\tcomponentWillMount() {\n\t\tif(localStorage && localStorage.getItem(\"tasks\")) {\n\t\t\tlet tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n\n\t// tạo random id cho task----------------------------------\n\trandomString = () => {\n\t\treturn Math.floor((1+ Math.random()) * 0x1000).toString(16).substring(1);\n\t}\n\n\tgenerateID = () => {\n\t\treturn this.randomString() + this.randomString() + \"-\" + this.randomString() + \"-\" + this.randomString() + \"-\" + this.randomString() + this.randomString() + this.randomString();\n\t}\n\t// có thể add thư viện ngoài\n\t// --------------------------------------------------------\n\n\tonToggleForm = () => {\n\t\tif(this.state.isDisplayForm && this.state.taskEditing !== null) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tisDisplayForm: true, \n\t\t\t\t\ttaskEditing: null\n\t\t\t\t}\n\t\t\t);\n\t\t}else {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tisDisplayForm: !this.state.isDisplayForm, \n\t\t\t\t\ttaskEditing: null\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tonCloseForm = () => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tisDisplayForm: false\n\t\t\t}\n\t\t);\n\t}\n\n\tonOpenForm = () => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tisDisplayForm: true\n\t\t\t}\n\t\t);\n\t}\n\n\tonSubmit = (data) => {\n\t\tlet {tasks} = this.state;\n\t\t\n\t\tif(data.id === \"\") {\n\t\t\tdata.id = this.generateID();\n\t\t\ttasks.push(data);\n\t\t} else {\n\t\t\tlet index = this.findIndex(data.id);\n\t\t\ttasks[index] = data;\n\t\t}\n\t\t\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttasks: tasks,\n\t\t\t\ttaskEditing: null\n\t\t\t}\n\t\t);\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks))\n\t}\n\n\tonUpDataStatus = (id) => {\n\t\tlet {tasks} = this.state;\n\t\tlet index = this.findIndex(id);\n\t\tif(index !== -1) {\n\t\t\ttasks[index].status = !tasks[index].status;\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\t\t}\n\t}\n\n\tonDelete = (id) => {\n\t\tlet {tasks} = this.state;\n\t\tlet index = this.findIndex(id);\n\t\tif(index !== -1) {\n\t\t\ttasks.splice(index, 1);    // hàm xóa phần tử trong arr\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\t\t}\n\t\tthis.onCloseForm();\n\n\t}\n\n\tonUpDate = (id) => {\n\t\tlet {tasks} = this.state;\n\t\tlet index = this.findIndex(id);\n\t\tlet taskEditing = tasks[index];\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttaskEditing: taskEditing\n\t\t\t}\n\t\t);\n\t\tthis.onOpenForm();\t\n\t}\n\n\tfindIndex = (id) => {\n\t\tlet {tasks} = this.state;\n\t\tlet result = -1;\n\t\ttasks.forEach((task, index) => {\n\t\t\tif(task.id === id) {\n\t\t\t\tresult = index;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tonFilter = (filterName, filterStatus) => {\n\t\tfilterStatus = parseInt(filterStatus, 10);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tfilter: {\n\t\t\t\t\tname: filterName.toLowerCase(),\n\t\t\t\t\tstatus: filterStatus\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tonSearch = (keyWord) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tkeyWord: keyWord.toLowerCase()\n\t\t\t}\n\t\t);\n\t}\n\n\tonSort = async(name, value) => {      // do bất đồng bộ trong JS, console.log đc thực hiện trước setState, nên nếu ko xử \n\t\t\t\t\t\t\t\t\t\t  //lý bằng async-await thì log sẽ luôn in ra giá trị trước(giá trị chưa cập nhật) khi setState chạy\n\t\tawait this.setState(\n\t\t\t{\n\t\t\t\tsortBy: name,\n\t\t\t\tsortValue: value\n\t\t\t}\n\t\t);\n\n\t\t// console.log(this.state.sortBy, \" \", this.state.sortValue);\n\t}\n\n\trender() {\n\n\t\tlet {tasks, isDisplayForm, taskEditing, filter, keyWord, sortBy, sortValue} = this.state;\n\t\t\n\t\tif(filter) {\n\t\t\tif(filter.name) {\n\t\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\tif(filter.status === -1) {\n\t\t\t\t\treturn tasks;\n\t\t\t\t} else {\n\t\t\t\t\treturn task.status === (filter.status === 1 ? true : false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(keyWord) {\n\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\treturn task.name.toLowerCase().indexOf(keyWord) !== -1;\n\t\t\t});\n\t\t}\n\n\t\tlet elemTaskForm = isDisplayForm ? \n\t\t\t\t\t\t\t\t\t\t\t<TaskForm \n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit} \n\t\t\t\t\t\t\t\t\t\t\t\tonCloseForm={this.onCloseForm} \n\t\t\t\t\t\t\t\t\t\t\t\ttask={taskEditing}\n\t\t\t\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t\t\t\t : \"\";\n\n\t\tif(sortBy === \"name\") {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif(a.name > b.name) return sortValue;\n\t\t\t\telse if(a.name < b.name) return -sortValue;\n\t\t\t\telse return 0;\n\t\t\t});\n\t\t} else if(sortBy === \"status\") {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif(a.status > b.status) return -sortValue;\n\t\t\t\telse if(a.status < b.status) return sortValue;\n\t\t\t\telse return 0;\n\t\t\t});\n\t\t}\n\t\t\t\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t\n\t\t\t\t<div className=\"text-center mt-5\">\n\t\t\t\t\t<h1>Quan ly công viec (them-sua-xoa)</h1>\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\n\t\t\t\t<div className=\"row\">\n\t\n\t\t\t\t\t<div className={isDisplayForm ? \"col-xs-4 col-lg-4 col-md-4 col-sm-4\" : \"col-xs-0 col-lg-0 col-md-0 col-sm-0\"}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* <TaskForm /> */}\n\t\t\t\t\t\t{elemTaskForm}\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div className={isDisplayForm ? \"col-xs-8 col-lg-8 col-md-8 col-sm-8\" : \"col-xs-12 col-lg-12 col-md-12 col-sm-12\"}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary bxShadow-none\" onClick={this.onToggleForm}>\n\t\t\t\t\t\t\t<i className=\"fas fa-plus mr-2 ml-2\"></i>\n\t\t\t\t\t\t\tThem cong viec\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Control \n\t\t\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\t\t\tonSort={this.onSort}\n\t\t\t\t\t\t\tsortBy={sortBy}\n\t\t\t\t\t\t\tsortValue={sortValue}\n\t\t\t\t\t\t/>\n\t\n\t\t\t\t\t\t<div className=\"row mt-2\">\n\t\t\t\t\t\t\t<div className=\"col-xs-12 col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<TaskList \n\t\t\t\t\t\t\t\t\tonUpDataStatus={this.onUpDataStatus} \n\t\t\t\t\t\t\t\t\ttasks={tasks} \n\t\t\t\t\t\t\t\t\tonDelete={this.onDelete}\n\t\t\t\t\t\t\t\t\tonUpDate={this.onUpDate}\n\t\t\t\t\t\t\t\t\tonFilter={this.onFilter}\n\t\t\t\t\t\t\t\t/>\n\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</div>\n\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}